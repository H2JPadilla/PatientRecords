@model EL.PatientEntity
@{
    ViewBag.Title = "Update Patient";
}

<h2>Update Patient</h2>

@using (Html.BeginForm("UpdatePatient", "Patient", FormMethod.Post, new { id = "patientForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.ID)

    @Html.Partial("Partial/PatientForm", Model)

    <button type="button" class="btn btn-warning" id="updateButton">Update</button>
    <a href="@Url.Action("ViewPatient")" class="btn btn-secondary">Cancel</a>
}

<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Confirm Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">Do you want to update this patient record?</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary" id="confirmUpdateBtn">Yes, Update</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var updateModal = new bootstrap.Modal(document.getElementById('updateModal'));

            document.getElementById('updateButton').addEventListener('click', function () {
                if (validateForm()) {
                    updateModal.show();
                }
            });

            document.getElementById('confirmUpdateBtn').addEventListener('click', function () {
                document.getElementById('patientForm').submit();
            });

            function validateForm() {
                let isValid = true;
                const patientInput = document.getElementById('Patient');
                const drugInput = document.getElementById('DrugName');
                const dosageInput = document.getElementById('Dosage');

                // Clear previous errors
                document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));

                if (patientInput.value.trim() === '') {
                    patientInput.classList.add('is-invalid');
                    isValid = false;
                }
                if (drugInput.value.trim() === '') {
                    drugInput.classList.add('is-invalid');
                    isValid = false;
                }
                const dosageValue = parseInt(dosageInput.value, 10);
                if (dosageInput.value.trim() === '' || isNaN(dosageValue) || dosageValue <= 0) {
                    dosageInput.classList.add('is-invalid');
                    isValid = false;
                }

                if (!isValid) {
                    const firstInvalid = document.querySelector('.is-invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                    }
                }
                return isValid;
            }

            // Remove red highlight when user starts typing
            document.querySelectorAll('input').forEach(input => {
                input.addEventListener('input', function () {
                    this.classList.remove('is-invalid');
                });
            });
        });
    </script>
}